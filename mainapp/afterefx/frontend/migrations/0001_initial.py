# Generated by Django 3.2.3 on 2021-05-29 00:45

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AdGtrend',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('unscaled', models.IntegerField(blank=True, null=True)),
                ('month', models.IntegerField(blank=True, null=True)),
                ('ispartial', models.CharField(blank=True, max_length=10, null=True)),
                ('scale', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('g_value', models.DecimalField(blank=True, decimal_places=4, max_digits=10, null=True)),
                ('stockid', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'ad_gtrend',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AdWikiPgviews',
            fields=[
                ('stockid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('pageviews', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'ad_wiki_pgviews',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoPlotlyDashDashapp',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('instance_name', models.CharField(max_length=100, unique=True)),
                ('slug', models.CharField(max_length=110, unique=True)),
                ('base_state', models.TextField()),
                ('creation', models.DateTimeField()),
                ('update', models.DateTimeField()),
                ('save_on_change', models.IntegerField()),
            ],
            options={
                'db_table': 'django_plotly_dash_dashapp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoPlotlyDashStatelessapp',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app_name', models.CharField(max_length=100, unique=True)),
                ('slug', models.CharField(max_length=110, unique=True)),
            ],
            options={
                'db_table': 'django_plotly_dash_statelessapp',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Entdatatiingo',
            fields=[
                ('stockid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('stock_name', models.CharField(blank=True, max_length=45, null=True)),
                ('date', models.DateField()),
                ('close_value', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('high_value', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('low_value', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('open_value', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('adj_close', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('adj_high', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('adj_low', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('adj_open', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('adj_volume', models.BigIntegerField(blank=True, null=True)),
                ('div_cash', models.IntegerField(blank=True, null=True)),
                ('split_factor', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'EntDataTiingo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EntertainmentTickerinfo',
            fields=[
                ('serial_no', models.IntegerField(blank=True, null=True)),
                ('stockid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('stock_name', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'entertainment_tickerinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='FbDailyData',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('stockid', models.CharField(max_length=20)),
                ('fb_likes', models.IntegerField(blank=True, null=True)),
                ('fb_followers', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'fb_daily_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PredictInfo',
            fields=[
                ('stockid', models.CharField(max_length=20, primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('predicted_value', models.FloatField(blank=True, null=True)),
                ('mape', models.FloatField(blank=True, null=True)),
                ('model_score', models.FloatField(blank=True, null=True)),
                ('stan_dev', models.FloatField(blank=True, null=True)),
                ('sharpe_ratio', models.FloatField(blank=True, null=True)),
                ('sortino_ratio', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'predict_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RedditDailyData',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('stockid', models.CharField(max_length=20)),
                ('redditmention', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'reddit_daily_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SAlphaTable',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stockid', models.CharField(max_length=10)),
                ('date', models.DateField()),
                ('stock_name', models.CharField(blank=True, max_length=45, null=True)),
                ('open_value', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('close_value', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('low_value', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('high_value', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('wiki_pageviews', models.IntegerField(blank=True, null=True)),
                ('fb_followers', models.IntegerField(blank=True, null=True)),
                ('fb_likes', models.IntegerField(blank=True, null=True)),
                ('twitterfollower', models.IntegerField(blank=True, null=True)),
                ('redditmention', models.IntegerField(blank=True, null=True)),
                ('gics_sector', models.CharField(blank=True, max_length=45, null=True)),
                ('gics_sub_industry', models.CharField(blank=True, max_length=45, null=True)),
                ('predicted_value', models.FloatField()),
                ('mape', models.FloatField(blank=True, null=True)),
                ('model_score', models.FloatField(blank=True, null=True)),
                ('stan_dev', models.FloatField(blank=True, null=True)),
                ('sharpe_ratio', models.FloatField(blank=True, null=True)),
                ('sortino_ratio', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 's_alpha_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Snp500StockDaily',
            fields=[
                ('stockid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('stock_name', models.CharField(blank=True, max_length=45, null=True)),
                ('date', models.DateField()),
                ('close_value', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('high_value', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('low_value', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('open_value', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('volume', models.BigIntegerField(blank=True, null=True)),
                ('adj_close', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('adj_high', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('adj_low', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('adj_open', models.DecimalField(blank=True, decimal_places=10, max_digits=20, null=True)),
                ('adj_volume', models.BigIntegerField(blank=True, null=True)),
                ('div_cash', models.IntegerField(blank=True, null=True)),
                ('split_factor', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'snp500_stock_daily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Snp500StockInfo',
            fields=[
                ('stockid', models.CharField(max_length=10, primary_key=True, serialize=False)),
                ('stock_name', models.CharField(blank=True, max_length=45, null=True)),
                ('sec_filings', models.CharField(blank=True, max_length=45, null=True)),
                ('gics_sector', models.CharField(blank=True, max_length=45, null=True)),
                ('gics_sub_industry', models.CharField(blank=True, max_length=45, null=True)),
                ('headquater', models.CharField(blank=True, max_length=45, null=True)),
                ('date_first_added', models.CharField(blank=True, max_length=45, null=True)),
                ('cik', models.IntegerField(blank=True, null=True)),
                ('founded_year', models.CharField(blank=True, max_length=45, null=True)),
            ],
            options={
                'db_table': 'snp500_stock_info',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwitterDailyData',
            fields=[
                ('date', models.DateField(primary_key=True, serialize=False)),
                ('stockid', models.CharField(max_length=20)),
                ('twitterfollower', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'twitter_daily_data',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UDbDetails',
            fields=[
                ('db_id', models.CharField(db_column='DB_ID', max_length=16, primary_key=True, serialize=False)),
                ('db_desc', models.CharField(blank=True, db_column='DB_DESC', max_length=200, null=True)),
                ('eff_start_dt', models.DateTimeField(db_column='EFF_START_DT')),
                ('eff_end_dt', models.DateTimeField(blank=True, db_column='EFF_END_DT', null=True)),
            ],
            options={
                'db_table': 'U_DB_DETAILS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UElectronicAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('electronic_address', models.CharField(blank=True, db_column='ELECTRONIC_ADDRESS', max_length=255, null=True)),
                ('eff_start_dt', models.DateTimeField(blank=True, db_column='EFF_START_DT', null=True)),
                ('eff_end_dt', models.DateTimeField(blank=True, db_column='EFF_END_DT', null=True)),
            ],
            options={
                'db_table': 'U_ELECTRONIC_ADDRESS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UPlanDetails',
            fields=[
                ('plan_id', models.CharField(db_column='PLAN_ID', max_length=16, primary_key=True, serialize=False)),
                ('plan_desc', models.CharField(blank=True, db_column='PLAN_DESC', max_length=200, null=True)),
                ('eff_start_dt', models.DateTimeField(blank=True, db_column='EFF_START_DT', null=True)),
                ('eff_end_dt', models.DateTimeField(blank=True, db_column='EFF_END_DT', null=True)),
            ],
            options={
                'db_table': 'U_PLAN_DETAILS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UPostalAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('addr_line_1', models.CharField(blank=True, db_column='ADDR_LINE_1', max_length=255, null=True)),
                ('addr_line_2', models.CharField(blank=True, db_column='ADDR_LINE_2', max_length=255, null=True)),
                ('addr_line_3', models.CharField(blank=True, db_column='ADDR_LINE_3', max_length=255, null=True)),
                ('city', models.CharField(blank=True, db_column='CITY', max_length=200, null=True)),
                ('state', models.CharField(blank=True, db_column='STATE', max_length=200, null=True)),
                ('country', models.CharField(blank=True, db_column='COUNTRY', max_length=200, null=True)),
                ('zip_cd', models.CharField(blank=True, db_column='ZIP_CD', max_length=50, null=True)),
                ('eff_start_dt', models.DateTimeField(blank=True, db_column='EFF_START_DT', null=True)),
                ('eff_end_dt', models.DateTimeField(blank=True, db_column='EFF_END_DT', null=True)),
            ],
            options={
                'db_table': 'U_POSTAL_ADDRESS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='USkeyAddress',
            fields=[
                ('address_id', models.CharField(db_column='ADDRESS_ID', max_length=16, primary_key=True, serialize=False)),
                ('source_key', models.CharField(blank=True, db_column='SOURCE_KEY', max_length=255, null=True)),
                ('domain', models.CharField(blank=True, db_column='DOMAIN', max_length=20, null=True)),
                ('create_dt', models.DateTimeField(blank=True, db_column='CREATE_DT', null=True)),
            ],
            options={
                'db_table': 'U_SKEY_ADDRESS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UTelephoneAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_country_cd', models.CharField(blank=True, db_column='PHONE_COUNTRY_CD', max_length=10, null=True)),
                ('identification_cd', models.CharField(blank=True, db_column='IDENTIFICATION_CD', max_length=50, null=True)),
                ('subscriber_number', models.CharField(blank=True, db_column='SUBSCRIBER_NUMBER', max_length=20, null=True)),
                ('eff_start_dt', models.DateTimeField(blank=True, db_column='EFF_START_DT', null=True)),
                ('eff_end_dt', models.DateTimeField(blank=True, db_column='EFF_END_DT', null=True)),
            ],
            options={
                'db_table': 'U_TELEPHONE_ADDRESS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UUserDetails',
            fields=[
                ('user_id', models.CharField(db_column='USER_ID', max_length=40, primary_key=True, serialize=False)),
                ('eff_start_dt', models.DateTimeField(blank=True, db_column='EFF_START_DT', null=True)),
                ('first_nm', models.CharField(blank=True, db_column='FIRST_NM', max_length=150, null=True)),
                ('middle_nm', models.CharField(blank=True, db_column='MIDDLE_NM', max_length=150, null=True)),
                ('last_nm', models.CharField(blank=True, db_column='LAST_NM', max_length=150, null=True)),
                ('gender', models.CharField(blank=True, db_column='GENDER', max_length=10, null=True)),
                ('dob', models.DateField(blank=True, db_column='DOB', null=True)),
            ],
            options={
                'db_table': 'U_USER_DETAILS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UUserLoginDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('user_id', models.CharField(blank=True, db_column='USER_ID', max_length=40, null=True)),
                ('eff_start_dt', models.DateTimeField(blank=True, db_column='EFF_START_DT', null=True)),
                ('email', models.CharField(blank=True, db_column='EMAIL', max_length=100, null=True)),
                ('password', models.CharField(blank=True, db_column='PASSWORD', max_length=50, null=True)),
                ('eff_end_dt', models.DateTimeField(blank=True, db_column='EFF_END_DT', null=True)),
                ('user_enabled_flag', models.CharField(blank=True, db_column='USER_ENABLED_FLAG', max_length=1, null=True)),
            ],
            options={
                'db_table': 'U_USER_LOGIN_DETAILS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UPlanDbDetails',
            fields=[
                ('plan', models.OneToOneField(db_column='PLAN_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='frontend.uplandetails')),
                ('eff_start_dt', models.DateTimeField(db_column='EFF_START_DT')),
                ('eff_end_dt', models.DateTimeField(blank=True, db_column='EFF_END_DT', null=True)),
            ],
            options={
                'db_table': 'U_PLAN_DB_DETAILS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UUserAddressDetails',
            fields=[
                ('user', models.OneToOneField(db_column='USER_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='frontend.uuserdetails')),
                ('addr_usage_type', models.CharField(blank=True, db_column='ADDR_USAGE_TYPE', max_length=20, null=True)),
                ('user_addr_type_cd', models.CharField(blank=True, db_column='USER_ADDR_TYPE_CD', max_length=20, null=True)),
                ('eff_start_dt', models.DateTimeField(blank=True, db_column='EFF_START_DT', null=True)),
                ('eff_end_dt', models.DateTimeField(blank=True, db_column='EFF_END_DT', null=True)),
            ],
            options={
                'db_table': 'U_USER_ADDRESS_DETAILS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UUserDbDetails',
            fields=[
                ('user', models.OneToOneField(db_column='USER_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='frontend.uuserdetails')),
                ('eff_start_dt', models.DateTimeField(db_column='EFF_START_DT')),
                ('eff_end_dt', models.DateTimeField(blank=True, db_column='EFF_END_DT', null=True)),
            ],
            options={
                'db_table': 'U_USER_DB_DETAILS',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UUserPlanDetails',
            fields=[
                ('user', models.OneToOneField(db_column='USER_ID', on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='frontend.uuserdetails')),
                ('eff_start_dt', models.DateTimeField(blank=True, db_column='EFF_START_DT', null=True)),
                ('eff_end_dt', models.DateTimeField(blank=True, db_column='EFF_END_DT', null=True)),
            ],
            options={
                'db_table': 'U_USER_PLAN_DETAILS',
                'managed': False,
            },
        ),
    ]
